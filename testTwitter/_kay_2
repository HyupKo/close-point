/*
	TwitterFactory factory = new TwitterFactory(); 
	AccessToken accessToken = new AccessToken(token, tokenSecret);
	OAuthAuthorization auth = new OAuthAuthorization(new ConfigurationBuilder().build(), CONSUMER_KEY, CONSUMER_SECRET, accessToken);
	Twitter twitter = factory.getInstance(auth);
	twitter = new TwitterFactory().getOAuthAuthorizedInstance(CONSUMER_KEY, CONSUMER_SECRET, accessToken);
	
	
	if(request.getParameter("oauth_verifier") == null)
	{
		out.print("<div> problem....... </div>");
	}
	else
	{
		out.print("<div> It's good!!! </div>");
	}
*/	

	
//	Twitter twitter = new TwitterFactory().getInstance();

//	twitter.setOAuthConsumer(CONSUMER_KEY, CONSUMER_SECRET);


//	AccessToken accessToken = twitter.getOAuthAccessToken(new RequestToken(token, tokenSecret));

/*
	
	AccessToken accessToken = twitter.getOAuthAccessToken(oauth_token, tokenSecret);
	
//	session.setAttribute("accessToken", accessToken); 			
//TWITTER인스턴스 생성시에 필요하지만, session에 twitter인스턴스를 등록하여 accessToken을 등록할 필요가 없다.
	twitter = new TwitterFactory().getOAuthAuthorizedInstance(CONSUMER_KEY, CONSUMER_SECRET, accessToken);
/*
	Twitter twitter = new TwitterFactory().getInstance();
	TwitterFactory factory = new TwitterFactory();
	twitter.setOAuthConsumer(CONSUMER_KEY, CONSUMER_SECRET);
	RequestToken reqToken = twitter.getOAuthRequestToken();

	AccessToken accessToken = null;
	try
	{
		accessToken = twitter.getOAuthAccessToken();
	}
	catch (TwitterException te) {
	        if(401 == te.getStatusCode()){
	          System.out.println("Unable to get the access token.");
	        }else{
	          te.printStackTrace();
	        }
	}
*/	
/*	out.print(accessToken.getToken() + "<br>");
	out.print(accessToken.getTokenSecret() + "<br>");	*/
//	twitter = factory.getOAuthAuthorizedInstance(CONSUMER_KEY, CONSUMER_SECRET, accessToken);

	//	AccessToken accessToken = twitter.getOAuthAccessToken(oauth_token, tokenSecret);
//	session.setAttribute("accessToken", accessToken); 
